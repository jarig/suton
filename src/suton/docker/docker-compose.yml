version: "3.8"
services:
  tonvalidator:
    image: tonvalidator:latest
    build:
      context: ./rustvalidator
      args:
        TON_NODE_GITHUB_REPO: $RUST_TON_NODE_GITHUB_REPO
        TON_NODE_GITHUB_COMMIT_ID: $RUST_TON_NODE_GITHUB_COMMIT_ID
        TONOS_CLI_GITHUB_COMMIT_ID: $RUST_TONOS_CLI_GITHUB_COMMIT_ID
        HOST_TON_USER_ID: $HOST_TON_USER_ID
        HOST_TON_GROUP_ID: $HOST_TON_GROUP_ID
    hostname: tonvalidator
    restart: unless-stopped
    environment:
      ADNL_PORT:
      VALIDATOR_NAME:
      NETWORK_TYPE:
      CONFIGS_PATH:
      TON_NODE_EXTRA_ARGS:
      TON_ENV:
      TON_VALIDATOR_CONFIG_URL:
      HOST_TON_CONTROL_USER_ID:
      HOST_TON_CONTROL_GROUP_ID:
    ports:
      - "127.0.0.1:3031:3031"
      - "30303:30303"
      - "30303:30303/udp"
    volumes:
      - type: bind
        source: ${TON_WORK_DIR}
        target: /ton-node-work
        consistency: delegated
      - type: volume
        source: rust_metrics
        target: /tmp/metrics
      - type: volume
        source: validator-console-keys
        target: /var/rton-console-keys-${TON_ENV}
  tonlogstash:
    image: tonlogstash:latest
    restart: on-failure
    build: 
      context: ./logstash
      args:
        TON_USER_GID: ${HOST_TON_GROUP_ID}
    ports:
      - "127.0.0.1:${LOGSTASH_HOST_DATA_INPUT_PORT}:${LOGSTASH_HOST_DATA_INPUT_PORT}"
    volumes:
      - type: bind
        source: ${TON_WORK_DIR}
        target: /var/ton-work
      - type: bind
        source: ${TON_CONTROL_WORK_DIR}
        target: /var/ton-control
    environment:
      - TON_ENV=${TON_ENV}
      - TON_WORK_DIR=/var/ton-work
      - TON_CONTROL_WORK_DIR=/var/ton-control
      - TON_LOG_DIR=/var/ton-work/${TON_ENV}/log
      - TON_CONTROL_LOG_DIR=/var/ton-control/${TON_ENV}/log
      - LOGSTASH_HOST_DATA_INPUT_PORT=${LOGSTASH_HOST_DATA_INPUT_PORT}
  toncontrol:
    image: toncontrol:latest
    restart: always
    build:
      context: ..
      dockerfile: docker/toncontrol/Dockerfile
      args:
        HOST_TON_CONTROL_USER_ID: $HOST_TON_CONTROL_USER_ID
        HOST_TON_CONTROL_GROUP_ID: $HOST_TON_CONTROL_GROUP_ID
    volumes:
      - type: volume
        source: validator-console-keys
        target: /var/ton-keys
      - type: volume
        source: ton-control-keys
        target: /var/ton-control-keys
      # logs will be written under here, data from here will be copied over to /var/ton-keys on start
      - type: bind
        source: ${TON_CONTROL_WORK_DIR}
        target: /var/ton-control
    environment:
      - TON_ENV=${TON_ENV}
      - TON_CONTROL_SETTINGS=${TON_CONTROL_SETTINGS}
      - TON_CONTROL_VALIDATOR_NETWORK_ADDR=${TON_CONTROL_VALIDATOR_NETWORK_ADDR}
      - TON_CONTROL_VALIDATOR_LITE_CLIENT_ADDR=${TON_CONTROL_VALIDATOR_LITE_CLIENT_ADDR}
      - TON_CONTROL_QUEUE_NAME=${TON_CONTROL_QUEUE_NAME}
      - TON_CONTROL_SECRET_MANAGER_CONNECTION_STRING=${TON_CONTROL_SECRET_MANAGER_CONNECTION_STRING}
      - TON_CONTROL_ELECTION_MODE=${TON_CONTROL_ELECTION_MODE}
      - TON_CONTROL_DEFAULT_STAKE=${TON_CONTROL_DEFAULT_STAKE}
      - TON_CONTROL_STAKE_MAX_FACTOR=${TON_CONTROL_STAKE_MAX_FACTOR}
      - TON_CONTROL_CLIENT_KEY_PATH=${TON_CONTROL_CLIENT_KEY_PATH}
      - TON_CONTROL_SERVER_PUB_KEY_PATH=${TON_CONTROL_SERVER_PUB_KEY_PATH}
      - TON_CONTROL_LITE_SERVER_PUB_KEY_PATH=${TON_CONTROL_LITE_SERVER_PUB_KEY_PATH}

volumes:
  ton-control-keys:
  validator-console-keys:
  rust_metrics:
